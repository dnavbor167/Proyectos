{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Proyectos/2-DAW/2Trimestre/DWEC/nomoFobiaHooks/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport Preguntas from './Components/Card';\nimport { Alert } from 'reactstrap';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([{\n    id: 1,\n    pregunta: \"Cuando mandas un mensaje por whatsapp esperas siempre al doble check. Si no aparece vuelves a abrir el terminal para revisarlo al rato.\"\n  }, {\n    id: 2,\n    pregunta: \"Antes de acostarte siempre miras el móvil a ver si tienes mensajes o notificaciones.\"\n  }, {\n    id: 3,\n    pregunta: \"Te despiertas antes de tiempo para jugar, mandar mensajes, actualizar perfiles,… con el teléfono móvil.\"\n  }, {\n    id: 4,\n    pregunta: \"Si sales de casa sin el móvil volverías a cogerlo aunque llegues tarde a tu cita.\"\n  }, {\n    id: 5,\n    pregunta: \"Tienes miedo a quedarte sin batería.\"\n  }, {\n    id: 6,\n    pregunta: \"Cuando tienes la batería baja desactivas ciertas aplicaciones u opciones del teléfono como la WiFi, bluetooth para no quedarte sin batería.\"\n  }, {\n    id: 7,\n    pregunta: \"Tienes ansiedad cuando tienes llamadas perdidas. Llamas a los números y te preocupas si no responden.\"\n  }, {\n    id: 8,\n    pregunta: \"Miras la cobertura cuando estas en algún sitio con los amigos, esperando, etc.\"\n  }, {\n    id: 9,\n    pregunta: \"Sueles hacer alguna otra cosa mientras que miras al móvil como comer, lavarte los dientes, etc.\"\n  }, {\n    id: 10,\n    pregunta: \"Vas al baño siempre con el móvil.\"\n  }]);\n  const [respuestas, setRespuestas] = useState([{\n    id: 1,\n    respuesta: \"En principio no tienes nada de que preocuparte.\"\n  }, {\n    id: 2,\n    respuesta: \"Empiezas a tener signos de dependencia del móvil. Puedes utilizar técnicas como apagar el móvil cuando no lo necesitas, cuando duermes, etc.\"\n  }, {\n    id: 3,\n    respuesta: \"Tienes una gran dependencia del móvil. Deberías seguir un plan de «desintoxicación» del móvil como por ejemplo dejar el móvil en casa cuando vas a comprar, apagarlo durante la noche, apagarlo durante horas de clase o trabajo, etc.\"\n  }, {\n    id: 4,\n    respuesta: \"Tus síntomas de dependencia son muy preocupantes. Además de todas las técnicas de los apartados anteriores deberías plantearte un plan de desintoxicación del móvil que consista en estar una o dos semanas sin utilizarlo. Si ves que no puedes hacerlo por ti mismo, pide ayuda a un profesional.\"\n  }]);\n  const [contador, setContador] = useState(0);\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const clica = (valorBtn, idBoton) => {\n    if (valorBtn === \"si\") {\n      setContador(contador + 1);\n    }\n    let array = questions.filter(id => id.id !== idBoton);\n    setQuestions(array);\n    setMostrarModal(array.length === 0);\n  };\n  const alertas = () => {\n    let respuesta = null;\n    if (mostrarModal) {\n      if (contador >= 0 && contador <= 5) {\n        respuesta = /*#__PURE__*/_jsxDEV(Alert, {\n          children: [respuestas[0].respuesta, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this);\n      } else if (contador >= 6 && contador <= 7) {\n        respuesta = /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"primary\",\n          children: [respuestas[1].respuesta, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this);\n      } else if (contador >= 7 && contador <= 8) {\n        respuesta = /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"warning\",\n          children: [respuestas[2].respuesta, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this);\n      } else if (this.state.contador >= 9 && contador <= 10) {\n        respuesta = /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: [respuestas[3].respuesta, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this);\n      }\n    }\n    return respuesta;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [alertas(), /*#__PURE__*/_jsxDEV(Preguntas, {\n      listaPreguntas: questions,\n      clica: (valorBtn, idBoton) => clica(valorBtn, idBoton)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LnOCO94EmL2CDiajGDQxe7JulcU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Preguntas","Alert","useState","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","id","pregunta","respuestas","setRespuestas","respuesta","contador","setContador","mostrarModal","setMostrarModal","clica","valorBtn","idBoton","array","filter","length","alertas","children","fileName","_jsxFileName","lineNumber","columnNumber","color","state","className","listaPreguntas","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/Proyectos/2-DAW/2Trimestre/DWEC/nomoFobiaHooks/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport Preguntas from './Components/Card';\nimport { Alert } from 'reactstrap';\nimport { useState } from 'react';\n\nconst App = () => {\n\n  const [questions, setQuestions] = useState([\n    { id: 1, pregunta: \"Cuando mandas un mensaje por whatsapp esperas siempre al doble check. Si no aparece vuelves a abrir el terminal para revisarlo al rato.\" },\n    { id: 2, pregunta: \"Antes de acostarte siempre miras el móvil a ver si tienes mensajes o notificaciones.\" },\n    { id: 3, pregunta: \"Te despiertas antes de tiempo para jugar, mandar mensajes, actualizar perfiles,… con el teléfono móvil.\" },\n    { id: 4, pregunta: \"Si sales de casa sin el móvil volverías a cogerlo aunque llegues tarde a tu cita.\" },\n    { id: 5, pregunta: \"Tienes miedo a quedarte sin batería.\" },\n    { id: 6, pregunta: \"Cuando tienes la batería baja desactivas ciertas aplicaciones u opciones del teléfono como la WiFi, bluetooth para no quedarte sin batería.\" },\n    { id: 7, pregunta: \"Tienes ansiedad cuando tienes llamadas perdidas. Llamas a los números y te preocupas si no responden.\" },\n    { id: 8, pregunta: \"Miras la cobertura cuando estas en algún sitio con los amigos, esperando, etc.\" },\n    { id: 9, pregunta: \"Sueles hacer alguna otra cosa mientras que miras al móvil como comer, lavarte los dientes, etc.\" },\n    { id: 10, pregunta: \"Vas al baño siempre con el móvil.\" }\n  ])\n  const [respuestas, setRespuestas] = useState([\n    { id: 1, respuesta: \"En principio no tienes nada de que preocuparte.\" },\n    { id: 2, respuesta: \"Empiezas a tener signos de dependencia del móvil. Puedes utilizar técnicas como apagar el móvil cuando no lo necesitas, cuando duermes, etc.\" },\n    { id: 3, respuesta: \"Tienes una gran dependencia del móvil. Deberías seguir un plan de «desintoxicación» del móvil como por ejemplo dejar el móvil en casa cuando vas a comprar, apagarlo durante la noche, apagarlo durante horas de clase o trabajo, etc.\" },\n    { id: 4, respuesta: \"Tus síntomas de dependencia son muy preocupantes. Además de todas las técnicas de los apartados anteriores deberías plantearte un plan de desintoxicación del móvil que consista en estar una o dos semanas sin utilizarlo. Si ves que no puedes hacerlo por ti mismo, pide ayuda a un profesional.\" }\n  ])\n\n  const [contador, setContador] = useState(0)\n\n  const [mostrarModal, setMostrarModal] = useState(false)\n\n  const clica = (valorBtn, idBoton) => {\n    if (valorBtn === \"si\") {\n      setContador(contador + 1)\n    }\n\n    let array = questions.filter(id => id.id !== idBoton)\n\n    setQuestions(array)\n\n    setMostrarModal(array.length === 0)\n  }\n\n  const alertas = () => {\n    let respuesta = null\n\n    if (mostrarModal) {\n      if (contador >= 0 && contador <= 5) {\n        respuesta = <Alert>{respuestas[0].respuesta} </Alert>\n      } else if (contador >= 6 && contador <= 7) {\n        respuesta = <Alert color='primary'>{respuestas[1].respuesta} </Alert>\n      } else if (contador >= 7 && contador <= 8) {\n        respuesta = <Alert color='warning'>{respuestas[2].respuesta} </Alert>\n      } else if (this.state.contador >= 9 && contador <= 10) {\n        respuesta = <Alert color='danger'>{respuestas[3].respuesta} </Alert>\n      }\n    }\n\n\n    return respuesta\n  }\n\n  return (\n    <div className=\"App\">\n      {alertas()}\n      <Preguntas listaPreguntas={questions} clica={(valorBtn, idBoton) => clica(valorBtn, idBoton)} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}